<?php

declare(strict_types=1);

/*
 * MichelinDevPetstore
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace MichelinDevPetstoreLib\Tests\Controllers;

use MichelinDevPetstoreLib\Controllers\StoreController;
use MichelinDevPetstoreLib\Exceptions;

class StoreControllerTest extends BaseTestController
{
    /**
     * @var StoreController StoreController instance
     */
    protected static $controller;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$controller = parent::getClient()->getStoreController();
    }

    public function testTestGetInventory()
    {
        // Perform API call
        $result = null;
        try {
            $result = self::$controller->getInventory();
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', true];

        // Assert result with expected response
        $this->newTestCase($result)->expectStatus(200)->allowExtraHeaders()->expectHeaders($headers)->assert();
    }

    public function testTestPlaceOrder()
    {
        // Parameters for the API call
        $id = 10;
        $petId = 198772;
        $quantity = 7;
        $shipDate = null;
        $status = null;
        $complete = null;

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->placeOrder($id, $petId, $quantity, $shipDate, $status, $complete);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', true];

        // Assert result with expected response
        $this->newTestCase($result)->expectStatus(200)->allowExtraHeaders()->expectHeaders($headers)->assert();
    }
}
