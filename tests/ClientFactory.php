<?php

declare(strict_types=1);

/*
 * MichelinDevPetstore
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace MichelinDevPetstoreLib\Tests;

use Core\Types\CallbackCatcher;
use MichelinDevPetstoreLib\Authentication\ApiKeyCredentialsBuilder;
use MichelinDevPetstoreLib\Authentication\PetstoreAuthCredentialsBuilder;
use MichelinDevPetstoreLib\MichelinDevPetstoreClient;
use MichelinDevPetstoreLib\MichelinDevPetstoreClientBuilder;

class ClientFactory
{
    public static function create(CallbackCatcher $httpCallback): MichelinDevPetstoreClient
    {
        $clientBuilder = MichelinDevPetstoreClientBuilder::init();
        $clientBuilder = self::addConfigurationFromEnvironment($clientBuilder);
        $clientBuilder = self::addTestConfiguration($clientBuilder);
        return $clientBuilder->httpCallback($httpCallback)->build();
    }

    public static function addTestConfiguration(
        MichelinDevPetstoreClientBuilder $builder
    ): MichelinDevPetstoreClientBuilder {
        return $builder;
    }

    public static function addConfigurationFromEnvironment(
        MichelinDevPetstoreClientBuilder $builder
    ): MichelinDevPetstoreClientBuilder {
        $timeout = getenv('MICHELIN_DEV_PETSTORE_TIMEOUT');
        $numberOfRetries = getenv('MICHELIN_DEV_PETSTORE_NUMBER_OF_RETRIES');
        $maximumRetryWaitTime = getenv('MICHELIN_DEV_PETSTORE_MAXIMUM_RETRY_WAIT_TIME');
        $environment = getenv('MICHELIN_DEV_PETSTORE_ENVIRONMENT');
        $oAuthClientId = getenv('MICHELIN_DEV_PETSTORE_O_AUTH_CLIENT_ID');
        $oAuthRedirectUri = getenv('MICHELIN_DEV_PETSTORE_O_AUTH_REDIRECT_URI');
        $apiKey = getenv('MICHELIN_DEV_PETSTORE_API_KEY');

        if (!empty($timeout) && \is_numeric($timeout)) {
            $builder->timeout(intval($timeout));
        }

        if (!empty($numberOfRetries) && \is_numeric($numberOfRetries)) {
            $builder->numberOfRetries(intval($numberOfRetries));
        }

        if (!empty($maximumRetryWaitTime) && \is_numeric($maximumRetryWaitTime)) {
            $builder->maximumRetryWaitTime(intval($maximumRetryWaitTime));
        }

        if (!empty($environment)) {
            $builder->environment($environment);
        }

        if (!empty($oAuthClientId) && !empty($oAuthRedirectUri)) {
            $builder->petstoreAuthCredentials(
                PetstoreAuthCredentialsBuilder::init($oAuthClientId, $oAuthRedirectUri)
            );
        }

        if (!empty($apiKey)) {
            $builder->apiKeyCredentials(ApiKeyCredentialsBuilder::init($apiKey));
        }

        return $builder;
    }
}
